// Mdm Standard Object Prefixes
		// a - 		array
		// al - 		ArrayList
		// c - 		class
		// cs - 		struct
		// lc - 		collection
		// b - 		bool
		// ba - 		bool array
		// bb - 		byte
		// bba - 	byte array
		// bc - 		char
		// bca - 	char array
		// d - 		decimal
		// da - 		decimal array
		// e - 		exception
		// f - 			float
		// fa - 		float array
		// l - 			list
		// lc - 		collection
		// ln - 		enumeration
		// la - 		list array
		// 	i - 		integer (int32)
		// ia - 		integer array
		// s - 		string (extendable)
		// sa - 		string array
		// sb - 		string builder string
		// sms - 	string - memory stream
		// cs - 		struct
		// v - 		event

OBJECTS
		// a - 	Application
		// al - 	ArrayList
		// c - 	Class
		// cd - 	Delegate
		// cs - 	Struct
		// cs - 	Struct
		// cv - 	Event
		// l - 		List
		// m - 	Method
		// n - 	Namespace (NOT USED)
		
OBJECT INSTANCES		
		// oa - 		Object - Application
		// oal - 		Object - ArrayList
		// oc - 		Class Instance
		// ocs - 	Struct Instance
		// om - 	Method Instance (NOT USED)
		
		
		// Console
		// ocot  - 	Object Console Output TextWrtier
		// ocos - 	Object Console Output StreamWrtier
		// oci  - 	Object Console Input
		// ocet - 	Object Console Error TextWriter
		// ocee - 	Object Console Error Exception
		
		// DotNet Object
		// od  - 	Object - DotNet
		// ocd - 	Object - DotNet - DELEGATE
		
		// DotNet Object - Namespaces
		// odxx - 	Object - DontNet Namespace
		// ods  - 	Object - DotNet - System Namespace
		// odst - 	Object - DotNet - System.Type
		
		
		// Generic Object
		// oo   - Object - Object Type not specified
        // oe   - Object - Exception
		// ocd - Object - Delegate
		// ocv - Object - Event
		
		// Mdm Objects - Generice
        // omo  - Object - Mdm  - Mobject - Mdm framework object object
		
		// Mdm Objects - Namespaces
		// omm - Object - Mdm - Mapplication - Mdm framework application object
		
        // oma  - Object - Mdm - Mdm Application - the application
		
        // omh  - Object - Mdm - Mdm Handler - application control
		
		// omp  - Object - Mdm - Main Page - for this app

		// omv  - 		Object - Mdm - Mdm Verb - process that performs the action
		//  Mdm Object Validation
		// omvv - 		Object - Mdm - Mdm Verb - Event
		// omvva - 	Object - Mdm - Mdm Verb - Validation
		// omvvae - 	Object - Mdm - Mdm Verb - Validation- Exception
		// omvOf  -	Object - Mdm - Mdm File Action
		
        // of - 		Object - File
        // ofb - 	Object - File - Buffer
		// ofcd - 	Object - File - Delegate
		// ofcv - 	Object - File - Event
        // ofe  - 	Object - File - Exception
		
        // ofs  - 		Object - File - File Stream
        // ofsr - 		Object - File - File Stream Reader
		// ofsrcd - 	Object - File - File Stream Reader - Delegate
		
		
		// Database Connection
        // ofd  - 		Object - File - Database Connection
        // ofde - 		Object - File - Database Connection - Error
		// ofdcd - 	Object - File - Database Connection - Delegate
        // ofdcv - 	Object - File - Database Connection - Event
		
		// Database Sql Data Reader
		// ofddr - 		Object - File - Database Connection - DataReader
        // ofddre - 	Object - File - Database Connection - DataReader- Error
		// ofddrcd - 	Object - File - Database Connection - DataReader- Delegate
        // ofddrcv - 	Object - File - Database Connection - DataReader- Event
		
		// Database Sql Text Reader
		// ofdtr - 		Object - File - Database Connection - TextReader
        // ofdtre - 	Object - File - Database Connection - TextReader- Error
		// ofdtrcd - 	Object - File - Database Connection - TextReader- Delegate
        // ofdtrcv - 	Object - File - Database Connection - TextReader- Event

		// oh - 		Object - HashTable
		// ol - 		Object - List 
		// op - 		Object - Page
        // os - 		Object - Structure
		
// Class Hierarchy
// Note: 
Please note that the 
mismatches in abstraction 
between
C#, Win32 and Linq compared to
and
Mdm infrastructure 
are deliberate.

Level 0
// Hardware Classes
Level 1
// Clipboard
// Other Os / Win32 Functionality
Level 2
// Mdm Support Layer
// Mdm Standards Functions
Level 3
// Networking Layers
Level 5
// Mdm Code
Level 10
// Mdm Application Layer
Level 16
// Mdm Object
Level 5
// Mdm Protocol
Level 8
// Mdm File Io
// Mdm Printer Io
// Mdm DCom, Corba, Soap, etc.
Level 11
// Mdm Document
// Level 21
// Mdm C# Application



// Reserved Constants

null - Never Used
0 - Normal Start
0 - Normal End
1 - 

==============================================

        const int FILE_DICT_DATA = 1;
        const int FILE_DATA = 2;
        // <Area Id = "FileExistanceConstants">
        // protected int FileExistanceStatus = 0;
        const int FILE_IO_FILE_SHOULD_NOT_EXIST = 3;
        const int FILE_IO_FILE_DOES_EXIST = 2;
        const int FILE_IO_FILE_DOES_NOT_EXIST = 1;
        // <Area Id = "GeneralStatusConditionConstants">
        const int FILE_IO_OK = 0;
        const int FILE_IO_NO_STATUS_SET = 99999;
        // <Area Id = "FileOpenConstants">
        // protected int FileOpenStatus = 0;
        const int FILE_IO_OPEN_TRY_FIRST = -3;
        const int FILE_IO_OPEN_TRY_AGAIN = -2;
        const int FILE_IO_OPEN_TRY_DEFAULT = 2;
        const int FILE_IO_OPEN_TRY_ORIGINAL = 3;
        const int FILE_IO_OPEN_TRY_ALL = 3;
        const int FILE_IO_OPEN_FAILED = 121;
        const int FILE_IO_CLOSE_FAILED = 122;
        const int FILE_IO_NO_FILE_OPEN = 128;
        const int FILE_IO_NO_FILE_NAME = 129;
        // <Area Id = "FileIOTypeConstants">
        // protected int FileIOType = 0;
        const int DATABASE_IO_OK = 0;
        const int DATABASE_IO_OPEN_FAILED = 131;
        const int DATABASE_IO_CLOSE_FAILED = 132;
        const int DATABASE_IO_NO_FILE_OPEN = 138;
        const int DATABASE_IO_NO_FILE_NAME = 139;
        const int STREAM_IO_OK = 0;
        const int STREAM_IO_OPEN_FAILED = 141;
        const int STREAM_IO_CLOSE_FAILED = 142;
        const int STREAM_IO_NO_FILE_OPEN = 148;
        const int STREAM_IO_NO_FILE_NAME = 149;
        const int BINARY_IO_OK = 0;
        const int BINARY_IO_OPEN_FAILED = 151;
        const int BINARY_IO_CLOSE_FAILED = 152;
        const int BINARY_IO_NO_FILE_OPEN = 158;
        const int BINARY_IO_NO_FILE_NAME = 159;
        // <Area Id = "FileReadModeConstants">
        protected int iFileReadMode = 0;
        const int IMPORT_FILE_READ_NOT_SET_MODE = 0;
        const int IMPORT_FILE_READ_BUFFER_MODE = 1;
        const int IMPORT_FILE_READ_LINE_MODE = 2;
        const int IMPORT_FILE_READ_ALL_MODE = 3;
        const int IMPORT_FILE_READ_SQL_MODE = 4;
        const int IMPORT_FILE_READ_MODE_ERROR = 5;
        // <Area Id = "AsciiOpenOptions">
        // protected int AsciiOpenOptions = 0;
        const int FILE_IO_READ_ONLY = 21;
        const int FILE_IO_BINARY_MODE = 25;
        const int FILE_IO_SEEK_MODE = 28;
        const int FILE_IO_APPEND_ONLY = 22;
        const int FILE_IO_CREATE_IF_MISSING = 23;
        const int FILE_IO_CREATE_ONLY = 24;
        // <Area Id = "FileReadErrors">
        // FileReadAscii
        const int FILE_IO_READ_OK = 0;
        const int FILE_IO_READ_END_OF_FILE = 123;
        const int FILE_IO_READ_FAILED = 125;
        // FileReadDatabase
        const int DATABASE_IO_READ_END_OF_FILE = 133;
        const int DATABASE_IO_READ_OK = 0;
        const int DATABASE_IO_READ_FAILED = 135;
        // FileReadStream
        const int STREAM_IO_READ_END_OF_FILE = 143;
        const int STREAM_IO_READ_OK = 0;
        const int STREAM_IO_READ_FAILED = 145;
        // FileReadBinary
        const int BINARY_IO_READ_END_OF_FILE = 153;
        const int BINARY_IO_READ_OK = 0;
        const int BINARY_IO_READ_FAILED = 155;
        // <Area Id = "FileWriteErrorsConstants">
        // FileWrite
        // FileWriteAscii
        const int FILE_IO_WRITE_OK = 0;
        const int FILE_IO_WRITE_FAILED = 126;
        // FileWriteDatabase
        const int DATABASE_IO_WRITE_OK = 0;
        const int DATABASE_IO_WRITE_FAILED = 136;
        // FileWriteBinary
        const int BINARY_IO_WRITE_OK = 0;
        const int BINARY_IO_WRITE_FAILED = 156;
        // FileWriteStream
        const int STREAM_IO_WRITE_OK = 0;
        const int STREAM_IO_WRITE_FAILED = 146;
        // FileNull
        // FileField
        // FileTable
        // FileTableRow
        // FileTableColumn
        // <Area Id = "FileNullErrorsConstants">
        // <Area Id = "FileFileIdErrorsConstants">
        // <Area Id = "FileTableErrorsConstants">
        // <Area Id = "FileTableRowErrorsConstants">
        const int FILE_IO_NO_ROW_ID = 99;
        const int FILE_IO_ROW_ID_SHOULD_NOT_EXIST = 33;
        const int FILE_IO_ROW_ID_DOES_EXIST = 32;
        const int FILE_IO_ROW_ID_DOES_NOT_EXIST = 31;
