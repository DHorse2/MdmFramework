        # region MdmFileDatabaseAccessFields
        #region MdmFileDatabaseControlState
        // <Section Summary>
        // <Section Role="Declarations">
        // <Section Id = "MdmFileDatabaseControlState">
        // <Section Vs="MdmFileDbVs0_8_7">
        // <Area Id = "FileIOStateStatus">
        protected int iFileStatus = 0;
        // <Area Id = "FileExistanceStatus">
        protected int iFileExistanceStatus = 0;
        // <Area Id = "GeneralStatusConditionConstants">
        //
        // <Area Id = "FileIOTypeConstants">
        protected int iFileIOType = 0;
        // <Area Id = "FileReadModeStatus">
        protected int iFileReadMode = 0;
        // <Area Id = "FileOpenStatus">
        protected int iFileOpenStatus = 0;
        // <Area Id = "AsciiOpenOptions">
        protected int iAsciiOpenOptions = 0;
        #endregion
        #region MdmFileDatabaseControlConstants
        // <Section Summary>
        // <Section Role="Declarations">
        // <Section Id = "MdmFileDatabaseControlConstants">
        // <Section Vs="MdmStdRunVs0_8_5">
        // <Section Id = "FileIOConstants">
        // <Area Id = "FileExistanceConstants">
        // protected int FileExistanceStatus = 0;
        const int FILE_IO_FILE_SHOULD_NOT_EXIST = 3;
        const int FILE_IO_FILE_DOES_EXIST = 2;
        const int FILE_IO_FILE_DOES_NOT_EXIST = 1;
        // <Area Id = "GeneralStatusConditionConstants">
        const int FILE_IO_OK = 0;
        const int FILE_IO_NO_STATUS_SET = 99999;
        // <Area Id = "FileOpenConstants">
        // protected int FileOpenStatus = 0;
        const int FILE_IO_OPEN_TRY_FIRST = -3;
        const int FILE_IO_OPEN_TRY_AGAIN = -2;
        const int FILE_IO_OPEN_TRY_DEFAULT = 2;
        const int FILE_IO_OPEN_TRY_ORIGINAL = 3;
        const int FILE_IO_OPEN_TRY_ALL = 3;
        const int FILE_IO_OPEN_FAILED = 121;
        const int FILE_IO_CLOSE_FAILED = 122;
        const int FILE_IO_NO_FILE_OPEN = 128;
        const int FILE_IO_NO_FILE_NAME = 129;
        // <Area Id = "FileIOTypeConstants">
        // protected int FileIOType = 0;
        const int DATABASE_IO_OK = 0;
        const int DATABASE_IO_OPEN_FAILED = 131;
        const int DATABASE_IO_CLOSE_FAILED = 132;
        const int DATABASE_IO_NO_FILE_OPEN = 138;
        const int DATABASE_IO_NO_FILE_NAME = 139;
        const int STREAM_IO_OK = 0;
        const int STREAM_IO_OPEN_FAILED = 141;
        const int STREAM_IO_CLOSE_FAILED = 142;
        const int STREAM_IO_NO_FILE_OPEN = 148;
        const int STREAM_IO_NO_FILE_NAME = 149;
        const int BINARY_IO_OK = 0;
        const int BINARY_IO_OPEN_FAILED = 151;
        const int BINARY_IO_CLOSE_FAILED = 152;
        const int BINARY_IO_NO_FILE_OPEN = 158;
        const int BINARY_IO_NO_FILE_NAME = 159;
        // <Area Id = "FileReadModeConstants">
        protected int iFileReadMode = 0;
        const int IMPORT_FILE_READ_NOT_SET_MODE = 0;
        const int IMPORT_FILE_READ_BUFFER_MODE = 1;
        const int IMPORT_FILE_READ_LINE_MODE = 2;
        const int IMPORT_FILE_READ_ALL_MODE = 3;
        const int IMPORT_FILE_READ_SQL_MODE = 4;
        const int IMPORT_FILE_READ_MODE_ERROR = 5;
        // <Area Id = "AsciiOpenOptions">
        // protected int AsciiOpenOptions = 0;
        const int FILE_IO_READ_ONLY = 21;
        const int FILE_IO_BINARY_MODE = 25;
        const int FILE_IO_SEEK_MODE = 28;
        const int FILE_IO_APPEND_ONLY = 22;
        const int FILE_IO_CREATE_IF_MISSING = 23;
        const int FILE_IO_CREATE_ONLY = 24;
        // <Area Id = "FileReadErrors">
        // FileReadAscii
        const int FILE_IO_READ_OK = 0;
        const int FILE_IO_READ_END_OF_FILE = 123;
        const int FILE_IO_READ_FAILED = 125;
        // FileReadDatabase
        const int DATABASE_IO_READ_END_OF_FILE = 133;
        const int DATABASE_IO_READ_OK = 0;
        const int DATABASE_IO_READ_FAILED = 135;
        // FileReadStream
        const int STREAM_IO_READ_END_OF_FILE = 143;
        const int STREAM_IO_READ_OK = 0;
        const int STREAM_IO_READ_FAILED = 145;
        // FileReadBinary
        const int BINARY_IO_READ_END_OF_FILE = 153;
        const int BINARY_IO_READ_OK = 0;
        const int BINARY_IO_READ_FAILED = 155;
        // <Area Id = "FileWriteErrorsConstants">
        // FileWrite
        // FileWriteAscii
        const int FILE_IO_WRITE_OK = 0;
        const int FILE_IO_WRITE_FAILED = 126;
        // FileWriteDatabase
        const int DATABASE_IO_WRITE_OK = 0;
        const int DATABASE_IO_WRITE_FAILED = 136;
        // FileWriteBinary
        const int BINARY_IO_WRITE_OK = 0;
        const int BINARY_IO_WRITE_FAILED = 156;
        // FileWriteStream
        const int STREAM_IO_WRITE_OK = 0;
        const int STREAM_IO_WRITE_FAILED = 146;
        // FileNull
        // FileField
        // FileTable
        // FileTableRow
        // FileTableColumn
        // <Area Id = "FileNullErrorsConstants">
        // <Area Id = "FileFileIdErrorsConstants">
        // <Area Id = "FileTableErrorsConstants">
        // <Area Id = "FileTableRowErrorsConstants">
        const int FILE_IO_NO_ROW_ID = 99;
        const int FILE_IO_ROW_ID_SHOULD_NOT_EXIST = 33;
        const int FILE_IO_ROW_ID_DOES_EXIST = 32;
        const int FILE_IO_ROW_ID_DOES_NOT_EXIST = 31;
        // <Area Id = "FileTableColumnErrorsConstants">
        #endregion
        #endregion
